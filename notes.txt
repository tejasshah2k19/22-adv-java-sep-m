what type of application we can create using jee?
webapp 
website

server 
web server 
tomcat  


adv java -> 
	file -> new -> dynamic web project 

	project name : 22-adv-java-sep-m 
	module version : 2.5 
	finish 
	
tomcat -> install -> done 

tomcat ->eclipse -> link 

file -> new ->server -> apache -> tomcat 8.5 ->  browse tomcat folder 
			-> C:\program file\apache software foundation\tomcat\ -> select folder -> finish 
-------------------------------------------------------------------------------------------
window -> show view -> 
			 

1) 
src -> java file -> .java 
build -> .class 
webcontent -> website page [html ]  , css , js , video , images 
	META-INF
	WEB-INF 
		lib 
		web.xml 
		
2)
	src -> main -> java -> .java 
			    -> webapp 
			    		-> html , css, js,object 
			    		
			
	
first page -> 
	index.html 
	
right click on webapp or webcontent -> new -> html -> index.html -> finish 


------------------------------------------------------------------
direct project run --> index.html ? why ? 


webcontent/webapp ->WEB-INF->web.xml 

create signup page with firstname email and password field 

------------------------------------------------------------------

user --> server ---> request 
server --> process --> response 



user --> request --> server ---> process --> response --> user 


class A extends Thread{

	public void run(){
		//logic 
	}
}





HttpServlet class is belongs to javax package.
inside javax we have servlet package. 
 
we get above things from servlet-api.jar file. 
 
how to link servlet-api.jar 

right click on project -> java build path -> lib -> add external jar -> browse till tomcat lib directory ->
select servlet-api.jar -> open -> click on order and exports -> select all -> apply and close 


 
src 
src/main/java 

create a folder in src controller 


1) create class : extends HttpServlet  [ Servlet ] 
2) override service : public void service(HttpServletRequest request,HttpServletResponse response)
3) map your servlet in web.xml 


	<servlet>
		<servlet-name>SignupServlet</servlet-name>
		<servlet-class>controller.SignupServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>SignupServlet</servlet-name>
		<url-pattern>/signup</url-pattern>
	</servlet-mapping>



-------------------------------------------------------------------------------------

jsp : java servlet page 
	  java server pages 
	  
	InputNum.jsp -> java + html  



create? 
WebContent -> file -> new -> jsp 	
by default -> jsp -> html directly 

how to write java? 
<%  %>  -> scriptlet 

print?
out 
<%= %>   expression 
 
jsp 

what is the full name of jsp?
java server page or java servlet page 

why we use jsp ? 
html + java 

how we can write java logic in jsp? 
using scriptlet 
<% int a = 90; %> 

how we can print java stuff on jsp?
expression
<%=a %>  


------------------------------------------------------------------

InputPattern.jsp	
		Num :  5 
		
			submit 
input ? 
num ? 


	1
	12
	123
	1234
	12345
------------------------------------------------------------------


input jsp => servlet -> validation -> jsp -> print 



MVC -> model view controller 
MVVM -> Model View View Model 

input | output -> view ->jsp HTmL

logic | Servlet -> controller 

data -> model [ bean dao ] 

fb.com -> Login.html -> email/password -> submit -> request ->server --> LoginServlet -> 
								email password read -> db connection -> db email password -> 
									true false ->	controller 
											if true -> home 
											else -> login error 
View -> Login.html | Home.html  
Controller ->  LoginServlet 
model [bean dao ] -> email ,password=> db 											



------------------------------------------

servlet life cycle 

Signup.jsp => submit -> SignupServlet ->


1) load class
2) instance create 
3) init -> 1 time 
4) service -> logic -> all the time -> request  
5) destroy -> 1 time -> shutdown server 

 ------------------------------------------
 
why servlet ?

-----------------------------------------

Add hobby and Country in Registration.jsp


servlet life ->
1)load class
2)create instance 
2)init 
3)service - request 
4)destroy 



if 20 request -> submit -> server

how many instances are created for servlet ?
1


how 20 ?
thread
-----------------------------

jsp
servlet 

validation

signup

login 


java -> sql

hw java connect your database ?
class -> connection -> 
hw java execute sql ? 
query-> class 



jdbc-mysql-mysql.connector  
1)  driver - db - [class-n] jar 
2)  connection
3)  sql query execute 

type 1
type 2
type 3 
type 4* 

java.sql	


dbConnection
		driver load 
		getConnection(url,username,password) 
		 	

 

mysql -> open 

	use 22gensepm;
	
	create table users (
		userId integer primary key auto_increment,
		firstName varchar(30),
		email varchar(40),
		password varchar(30),
		gender varchar(6)
	);
	
	insert into users (firstName,email,password,gender) values ('ram','ram@ayodhya.com','sita123','male');
	 

---------------------------------------------------------------------------------------

Filter -> 

icici.com 
->india
->usa
->bali
->russia 
->pakistan?


Login.jsp email password => submit => GeoFilter {s,p,a} yes goback no goahead=>  LoginServlet ==> validate? 


incoming request ----> filter ---> server servlet


Signup.jsp => fn ln email password 
			  fn          password => submit -> SignupServlet -> 
			  										1) fn em pwd => getParameter()
			  										2) validation => error back  | success goahead  
			  										3) data -> dao -> insert(user) -> db insert query 
			  										4) go to list page 
			  										 
500 users => singup.jsp => submit => [F]  
								500 SignupServlet =>
												200 validation fail 	  										  
												300 db insert 




1 subject exam 
10 subject exam 


Royal => inq => [F]Rec => Dhiraj Sir => 50 => 1 => 10 min [ 500 min ]  
						nonIt => 2  
						10th =>  2
						12th =>  2 
						EC =>    2 
						------------
						 		 8 => 80 min 


WhatsApp => image 25 mb -> x -> send -> [25]server[25] -> y 


WhatsApp => image 25 mb -> x -> send -> [25]server[5] -> y



WhatsApp => image 25 mb -> x -> send ->filter->images? compress =>  [5]server[5] -> y 

	

1) class XXX implements Filter 
2) init()  doFilter()  destroy() 
3) mapping web.xml 

---------------------------------------------------------------------------------------
how to store user's information !? 

	1) cookie - client side [ browser ] 
	2) session  - server side [ server's memory ] 




Welcome , Mr X 


name : god 
value : shiva 
		Save  
		
cookie -> god:shiva

1) how to store data in cookie
2) read data from cookie 
3) remove 

default expired time for cookie is 1 year.


AddCookie.jsp -> name value -> save -> 
PrintCookie.jsp -> print cookie 
RemoveCookie.jsp -> name cookie -> remove [ expired time ] setMaxAge();

-----------------------------------------------------------------------------

session -> server memory 

1) how to create session? 
	session can't created by us it will created by server.
2) how to access session? 
	we can ask session to server! 
	HttpSession session = request.getSession();	
	
	session.setAttribute("key",value);

	session.setAttribute("email",email);

-----------------------------------------------------------------------------Li

Listener -> listen->  
 					events -> act
	server start => log | third party api | pay as you grow|go 
	server shutdown -> stop all 
	
	server start -> aws connection | gray log  
	server stop - > aws close  [ 16 ] | gray log  
	 				
	event -> server start / stop 
			-> act => start -> logs | aws : connect 
			       => stop  -> logs | aws :	disconnect 
	
1) class YYY implements XXXXListener 
2) override method - logic 
3) web.xml 


			       
 
 
 	
 
 					
 
	
	
	 


	
	

 
